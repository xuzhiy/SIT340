package OfficialDescripton;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class OfficialAPIs {
	public static void main(String[] args) {
		OfficialAPIs.DescriptionSet();
	}
	public static Map DescriptionSet(){
		  Map m1 = new HashMap(); 
	      m1.put("ACCESS_CHECKIN_PROPERTIES", "Allows read/write access to the \"properties\" table in the checkin database, to change values that get uploaded.");
	      m1.put("ACCESS_COARSE_LOCATION", "Allows an app to access approximate location. Alternatively, you might want ACCESS_FINE_LOCATION.");
	      m1.put("ACCESS_FINE_LOCATION", "Allows an app to access precise location. Alternatively, you might want ACCESS_COARSE_LOCATION.");
	      m1.put("ACCESS_LOCATION_EXTRA_COMMANDS", "Allows an application to access extra location provider commands");
	      m1.put("ACCESS_NETWORK_STATE", "Allows applications to access information about networks.");
	      m1.put("ACCESS_NOTIFICATION_POLICY", "ACCESS_NOTIFICATION_POLICY");
	      m1.put("ACCESS_WIFI_STATE", "Allows applications to access information about Wi-Fi networks.");
	      m1.put("ACCOUNT_MANAGER", "Allows applications to call into AccountAuthenticators.");
	      m1.put("ADD_VOICEMAIL", "Allows an application to add voicemails into the system.");
	      m1.put("ANSWER_PHONE_CALLS", "Allows the app to answer an incoming phone call.");
	      m1.put("BATTERY_STATS", "Allows an application to collect battery statistics");
	      m1.put("BIND_ACCESSIBILITY_SERVICE", "Must be required by an AccessibilityService, to ensure that only the system can bind to it.");
	      m1.put("BIND_APPWIDGET", "Allows an application to tell the AppWidget service which application can access AppWidget's data. The normal user flow is that a user picks an AppWidget to go into a particular host, thereby giving that host application access to the private data from the AppWidget app. An application that has this permission should honor that contract.");
	      m1.put("BIND_AUTOFILL_SERVICE", "Must be required by a AutofillService, to ensure that only the system can bind to it.");
	      m1.put("BIND_CARRIER_MESSAGING_SERVICE", "Use BIND_CARRIER_SERVICES instead");
	      m1.put("BIND_CARRIER_SERVICES", "The system process that is allowed to bind to services in carrier apps will have this permission. Carrier apps should use this permission to protect their services that only the system is allowed to bind to.");
	      m1.put("BIND_CHOOSER_TARGET_SERVICE", "Must be required by a ChooserTargetService, to ensure that only the system can bind to it.");
	      m1.put("BIND_CONDITION_PROVIDER_SERVICE", "Must be required by a ConditionProviderService, to ensure that only the system can bind to it.");
	      m1.put("BIND_DEVICE_ADMIN", "Must be required by device administration receiver, to ensure that only the system can interact with it.");
	      m1.put("BIND_DREAM_SERVICE", "Must be required by an DreamService, to ensure that only the system can bind to it.");
	      m1.put("BIND_INCALL_SERVICE", "Must be required by a InCallService, to ensure that only the system can bind to it.");
	      m1.put("BIND_INPUT_METHOD", "Must be required by an InputMethodService, to ensure that only the system can bind to it.");
	      m1.put("BIND_MIDI_DEVICE_SERVICE", "Must be required by an MidiDeviceService, to ensure that only the system can bind to it.");
	      m1.put("BIND_NFC_SERVICE", "Must be required by a HostApduService or OffHostApduService to ensure that only the system can bind to it.");
	      m1.put("BIND_NOTIFICATION_LISTENER_SERVICE", "Must be required by an NotificationListenerService, to ensure that only the system can bind to it.");
	      m1.put("BIND_PRINT_SERVICE", "Must be required by a PrintService, to ensure that only the system can bind to it.");
	      m1.put("BIND_QUICK_SETTINGS_TILE", "Allows an application to bind to third party quick settings tiles.Should only be requested by the System, should be required by TileService declarations.");
	      m1.put("BIND_REMOTEVIEWS", "Must be required by a RemoteViewsService, to ensure that only the system can bind to it.");
	      m1.put("BIND_SCREENING_SERVICE", "Must be required by a CallScreeningService, to ensure that only the system can bind to it.");
	      m1.put("BIND_TELECOM_CONNECTION_SERVICE", "Must be required by a ConnectionService, to ensure that only the system can bind to it.");
	      m1.put("BIND_TEXT_SERVICE", "Must be required by a TextService (e.g. SpellCheckerService) to ensure that only the system can bind to it.");
	      m1.put("BIND_TV_INPUT", "Must be required by a TvInputService to ensure that only the system can bind to it.");
	      m1.put("BIND_VISUAL_VOICEMAIL_SERVICE", "Must be required by a link VisualVoicemailService to ensure that only the system can bind to it.");
	      m1.put("BIND_VOICE_INTERACTION", "Must be required by a VoiceInteractionService, to ensure that only the system can bind to it.");
	      m1.put("BIND_VPN_SERVICE", "Must be required by a VpnService, to ensure that only the system can bind to it.");
	      m1.put("BIND_VR_LISTENER_SERVICE", "Must be required by an VrListenerService, to ensure that only the system can bind to it.");
	      m1.put("BIND_WALLPAPER", "Must be required by a WallpaperService, to ensure that only the system can bind to it.");
	      m1.put("BLUETOOTH", "Allows applications to connect to paired bluetooth devices.");
	      m1.put("BLUETOOTH_ADMIN", "Allows applications to discover and pair bluetooth devices.");
	      m1.put("BLUETOOTH_PRIVILEGED", "Allows applications to pair bluetooth devices without user interaction, and to allow or disallow phonebook access or message access. This is not available to third party applications.");
	      m1.put("BODY_SENSORS", "Allows an application to access data from sensors that the user uses to measure what is happening inside his/her body, such as heart rate.");
	      m1.put("BROADCAST_PACKAGE_REMOVED", "Allows an application to broadcast a notification that an application package has been removed.");
	      m1.put("BROADCAST_SMS", "Allows an application to broadcast an SMS receipt notification.");
	      m1.put("BROADCAST_STICKY", "Allows an application to broadcast sticky intents. These are broadcasts whose data is held by the system after being finished, so that clients can quickly retrieve that data without having to wait for the next broadcast.");
	      m1.put("BROADCAST_WAP_PUSH", "Allows an application to broadcast a WAP PUSH receipt notification.");
	      m1.put("CALL_PHONE", "Allows an application to initiate a phone call without going through the Dialer user interface for the user to confirm the call.");
	      m1.put("CALL_PRIVILEGED", "Allows an application to call any phone number, including emergency numbers, without going through the Dialer user interface for the user to confirm the call being placed.");
	      m1.put("CAMERA", "Required to be able to access the camera device.This will automatically enforce the } manifest element for all camera features. If you do not require all camera features or can properly operate if a camera is not available, then you must modify your manifest as appropriate in order to install on devices that don't support all camera features.");
	      m1.put("CAPTURE_AUDIO_OUTPUT", "Allows an application to capture audio output.");
	      m1.put("CAPTURE_SECURE_VIDEO_OUTPUT", "Allows an application to capture secure video output.");
	      m1.put("CAPTURE_VIDEO_OUTPUT", "Allows an application to capture video output.");
	      m1.put("CHANGE_COMPONENT_ENABLED_STATE", "Allows an application to change whether an application component (other than its own) is enabled or not.");
	      m1.put("CHANGE_CONFIGURATION", "Allows an application to modify the current configuration, such as locale.");
	      m1.put("CHANGE_NETWORK_STATE", "Allows applications to change network connectivity state.");
	      m1.put("CHANGE_WIFI_MULTICAST_STATE", "Allows applications to enter Wi-Fi Multicast mode.");
	      m1.put("CHANGE_WIFI_STATE", "Allows applications to change Wi-Fi connectivity state.");
	      m1.put("CLEAR_APP_CACHE", "Allows an application to clear the caches of all installed applications on the device.");
	      m1.put("CONTROL_LOCATION_UPDATES", "Allows enabling/disabling location update notifications from the radio.");
	      m1.put("DELETE_CACHE_FILES", "Allows an application to delete cache files.");
	      m1.put("DELETE_PACKAGES", "Allows an application to delete packages.");
	      m1.put("DIAGNOSTIC", "Allows applications to RW to diagnostic resources.");
	      m1.put("DISABLE_KEYGUARD", "Allows applications to disable the keyguard if it is not secure.");
	      m1.put("DUMP", "Allows an application to retrieve state dump information from system services.");
	      m1.put("EXPAND_STATUS_BAR", "Allows an application to expand or collapse the status bar.");
	      m1.put("FACTORY_TEST", "Run as a manufacturer test application, running as the root user. Only available when the device is running in manufacturer test mode.");
	      m1.put("GET_ACCOUNTS", "Allows access to the list of accounts in the Accounts Service.");
	      m1.put("GET_ACCOUNTS_PRIVILEGED", "Allows access to the list of accounts in the Accounts Service.");
	      m1.put("GET_PACKAGE_SIZE", "Allows an application to find out the space used by any package.");
	      m1.put("GLOBAL_SEARCH", "This permission can be used on content providers to allow the global search system to access their data. Typically it used when the provider has some permissions protecting it (which global search would not be expected to hold), and added as a read-only permission to the path in the provider where global search queries are performed. This permission can not be held by regular applications; it is used by applications to protect themselves from everyone else besides global search.");
	      m1.put("INSTALL_LOCATION_PROVIDER", "Allows an application to install a location provider into the Location Manager.");
	      m1.put("INSTALL_PACKAGES", "Allows an application to install packages.");
	      m1.put("INSTALL_SHORTCUT", "Allows an application to install a shortcut in Launcher.");
	      m1.put("INSTANT_APP_FOREGROUND_SERVICE", "Allows an instant app to create foreground services.");
	      m1.put("INTERNET", "Allows applications to open network sockets.");
	      m1.put("KILL_BACKGROUND_PROCESSES", "Allows an application to call killBackgroundProcesses(String).");
	      m1.put("LOCATION_HARDWARE", "Allows an application to use location features in hardware, such as the geofencing api.");
	      m1.put("MANAGE_DOCUMENTS", "Allows an application to manage access to documents, usually as part of a document picker.");
	      m1.put("MANAGE_OWN_CALLS", "Allows a calling application which manages it own calls through the self-managed ConnectionService APIs. See {@link android.telecom.PhoneAccount#CAPABILITY_SELF_MANAGED for more information on the self-managed ConnectionService APIs.");
	      m1.put("MASTER_CLEAR", "Not for use by third-party applications.");
	      m1.put("MEDIA_CONTENT_CONTROL", "Allows an application to know what content is playing and control its playback.");
	      m1.put("MODIFY_AUDIO_SETTINGS", "Allows an application to modify global audio settings.");
	      m1.put("MODIFY_PHONE_STATE", "Allows modification of the telephony state - power on, mmi, etc. Does not include placing calls.");
	      m1.put("MOUNT_FORMAT_FILESYSTEMS", "Allows formatting file systems for removable storage.");
	      m1.put("MOUNT_UNMOUNT_FILESYSTEMS", "Allows mounting and unmounting file systems for removable storage.");
	      m1.put("NFC", "Allows applications to perform I/O operations over NFC.");
	      m1.put("PACKAGE_USAGE_STATS", "Allows an application to collect component usage statisticsDeclaring the permission implies intention to use the API and the user of the device can grant permission through the Settings application");
	      m1.put("PERSISTENT_ACTIVITY", "This constant was deprecated in API level 9.This functionality will be removed in the future; please do not use. Allow an application to make its activities persisten");
	      m1.put("PROCESS_OUTGOING_CALLS", "Allows an application to see the number being dialed during an outgoing call with the option to redirect the call to a different number or abort the call altogether.");
	      m1.put("READ_CALENDAR", "Allows an application to read the user's calendar data.");
	      m1.put("READ_CALL_LOG", "Allows an application to read the user's call log.");
	      m1.put("READ_CONTACTS", "Allows an application to read the user's contacts data.");
	      m1.put("READ_EXTERNAL_STORAGE", "Allows an application to read from external storage.");
	      m1.put("READ_FRAME_BUFFER", "Allows an application to take screen shots and more generally get access to the frame buffer data.");
	      m1.put("READ_INPUT_STATE", "This constant was deprecated in API level 16.");
	      m1.put("READ_LOGS", "Allows an application to read the low-level system log files.");
	      m1.put("READ_PHONE_NUMBERS", "Allows read access to the device's phone number(s). This is a subset of the capabilities granted by READ_PHONE_STATE but is exposed to instant applications.");
	      m1.put("READ_PHONE_STATE", "Allows read only access to phone state, including the phone number of the device, current cellular network information, the status of any ongoing calls, and a list of any PhoneAccounts registered on the device.");
	      m1.put("READ_SMS", "Allows an application to read SMS messages.");
	      m1.put("READ_SYNC_SETTINGS", "Allows applications to read the sync settings.");
	      m1.put("READ_SYNC_STATS", "Allows applications to read the sync stats.");
	      m1.put("READ_VOICEMAIL", "Allows an application to read voicemails in the system.");
	      m1.put("REBOOT", "Required to be able to reboot the device.");
	      m1.put("RECEIVE_BOOT_COMPLETED", "Allows an application to receive the ACTION_BOOT_COMPLETED that is broadcast after the system finishes booting. If you don't request this permission, you will not receive the broadcast at that time. Though holding this permission does not have any security implications, it can have a negative impact on the user experience by increasing the amount of time it takes the system to start and allowing applications to have themselves running without the user being aware of them. As such, you must explicitly declare your use of this facility to make that visible to the user.");
	      m1.put("RECEIVE_MMS", "Allows an application to monitor incoming MMS messages.");
	      m1.put("RECEIVE_SMS", "Allows an application to receive SMS messages.");
	      m1.put("RECEIVE_WAP_PUSH", "Allows an application to receive WAP push messages.");
	      m1.put("RECORD_AUDIO", "Allows an application to record audio.");
	      m1.put("REORDER_TASKS", "Allows an application to change the Z-order of tasks.");
	      m1.put("REQUEST_COMPANION_RUN_IN_BACKGROUND", "Allows a companion app to run in the background.");
	      m1.put("REQUEST_COMPANION_USE_DATA_IN_BACKGROUND", "Allows a companion app to use data in the background.");
	      m1.put("REQUEST_DELETE_PACKAGES", "Allows an application to request deleting packages. Apps targeting APIs greater than 25 must hold this permission in order to use ACTION_UNINSTALL_PACKAGE.");
	      m1.put("REQUEST_IGNORE_BATTERY_OPTIMIZATIONS", "Permission an application must hold in order to use ACTION_REQUEST_IGNORE_BATTERY_OPTIMIZATIONS. This is a normal permission: an app requesting it will always be granted the permission, without the user needing to approve or see it.");
	      m1.put("REQUEST_INSTALL_PACKAGES", "Allows an application to request installing packages. Apps targeting APIs greater than 25 must hold this permission in order to use ACTION_INSTALL_PACKAGE.");
	      m1.put("RESTART_PACKAGES", "This constant was deprecated in API level 8.");
	      m1.put("SEND_RESPOND_VIA_MESSAGE", "Allows an application (Phone) to send a request to other applications to handle the respond-via-message action during incoming calls.");
	      m1.put("SEND_SMS", "Allows an application to send SMS messages.");
	      m1.put("SET_ALARM", "Allows an application to broadcast an Intent to set an alarm for the user.");
	      m1.put("SET_ALWAYS_FINISH", "Allows an application to control whether activities are immediately finished when put in the background.");
	      m1.put("SET_ANIMATION_SCALE", "Modify the global animation scaling factor.");
	      m1.put("SET_DEBUG_APP", "Configure an application for debugging.");
	      m1.put("SET_PREFERRED_APPLICATIONS", "This constant was deprecated in API level 7.");
	      m1.put("SET_PROCESS_LIMIT", "Allows an application to set the maximum number of (not needed) application processes that can be running.");
	      m1.put("SET_TIME", "Allows applications to set the system time.");
	      m1.put("SET_TIME_ZONE", "Allows applications to set the system time zone.");
	      m1.put("SET_WALLPAPER", "Allows applications to set the wallpaper.");
	      m1.put("SET_WALLPAPER_HINTS", "Allows applications to set the wallpaper hints.");
	      m1.put("SIGNAL_PERSISTENT_PROCESSES", "Allow an application to request that a signal be sent to all persistent processes.");
	      m1.put("STATUS_BAR", "Allows an application to open, close, or disable the status bar and its icons.");
	      m1.put("SYSTEM_ALERT_WINDOW", "Allows an app to create windows using the type TYPE_APPLICATION_OVERLAY, shown on top of all other apps. Very few apps should use this permission; these windows are intended for system-level interaction with the user.");
	      m1.put("TRANSMIT_IR", "Allows using the device's IR transmitter, if available.");
	      m1.put("UNINSTALL_SHORTCUT", "This permission is no longer supported.");
	      m1.put("UPDATE_DEVICE_STATS", "Allows an application to update device statistics.");
	      m1.put("USE_FINGERPRINT", "Allows an app to use fingerprint hardware.");
	      m1.put("USE_SIP", "Allows an application to use SIP service.");
	      m1.put("VIBRATE", "Allows access to the vibrator.");
	      m1.put("WAKE_LOCK", "Allows using PowerManager WakeLocks to keep processor from sleeping or screen from dimming.");
	      m1.put("WRITE_APN_SETTINGS", "Allows applications to write the apn settings.");
	      m1.put("WRITE_CALENDAR", "Allows an application to write the user's calendar data.");
	      m1.put("WRITE_CALL_LOG", "Allows an application to write (but not read) the user's call log data.");
	      m1.put("WRITE_CONTACTS", "Allows an application to write the user's contacts data.");
	      m1.put("WRITE_EXTERNAL_STORAGE", "Allows an application to write to external storage.");
	      m1.put("WRITE_GSERVICES", "Allows an application to modify the Google service map.");
	      m1.put("WRITE_SECURE_SETTINGS", "Allows an application to read or write the secure system settings.");
	      m1.put("WRITE_SETTINGS", "Allows an application to read or write the system settings.");
	      m1.put("WRITE_SYNC_SETTINGS", "Allows applications to write the sync settings.");
	      m1.put("WRITE_VOICEMAIL", "Allows an application to modify and remove existing voicemails in the system.");
//	      System.out.println(m1.size());
	      return m1;
	}
}
